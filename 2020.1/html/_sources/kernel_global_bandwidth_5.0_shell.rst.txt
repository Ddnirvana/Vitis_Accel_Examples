kernel_global for 5.0 shell
===========================

Bandwidth test of global to local memory.

This example tests the bandwidth of kernel interface with global memory
for 4 cases using 1 DDR bank to 4 DDR banks. If more than 1 input/output
buffers are connected to one memory bank, these buffers can’t be read
concurrently to kernel’s local memory. In such cases, buffers can be
placed in different DDR banks to increase the bandwidth for concurrent
transfers.

User can customize these connections to global memory by explicitly
specifying the memory banks for different inputs/outputs. Seperate
bundle names need to be specified for each buffer to be placed in
different bank.

.. code:: cpp

   #pragma HLS INTERFACE m_axi port = input offset = slave bundle = gmem0
   #pragma HLS INTERFACE m_axi port = output offset = slave bundle = gmem1

Banks need to be specified using ``--sp`` tags in the kernel linking
stage along with the ``m_axi`` interface name and kernel name.

::

   --sp apply_watermark_1.m_axi_gmem0:bank0 --sp apply_watermark_1.m_axi_gmem1:bank1

SUPPORTED PLATFORMS
-------------------

======== ============== ================
Platform Board          Software Version
======== ============== ================
Xilinx   5.0 Shell only Vitis 2019.2
======== ============== ================

DESIGN FILES
------------

Application code is located in the src directory. Accelerator binary
files will be compiled to the xclbin directory. The xclbin directory is
required by the Makefile and its contents will be filled during
compilation. A listing of all the files in this example is shown below

::

   src/kernel.cl
   src/kernel_global_bandwidth.cpp

COMMAND LINE ARGUMENTS
----------------------

Once the environment has been configured, the application can be
executed by

::

   ./kernel_global <krnl_kernel_global XCLBIN>
