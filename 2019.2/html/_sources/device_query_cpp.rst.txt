Device Query (CPP)
==================

This Example prints the OpenCL properties of the platform and its
devices using OpenCL CPP APIs. It also displays the limits and
capabilities of the hardware.

**KEY CONCEPTS:** OpenCL API, Querying device properties

The role of this example to get the details of all the OpenCL Devices
connected to system. Platform IDs and Device IDs can be extracted using
Open CL APIs which are subsequently needed to configure the context and
command queues for communication between host and device. Example first
searches the all connected Platforms using clGetPlatformIDs() API. Then
it traverses to each Platform and finds all the connected devices using
clGetDeviceIDs(). Then it traverses all the devices and print all device
properties like device type, vendor id etc.

SUPPORTED PLATFORMS
-------------------

==================== ================= ================
Platform             Board             Software Version
==================== ================= ================
xilinx_u200_qdma     Xilinx Alveo U200 Vitis 2019.2
xilinx_u280_xdma     Xilinx Alveo U280 Vitis 2019.2
xilinx_u250_qdma     Xilinx Alveo U250 Vitis 2019.2
xilinx_u200_xdma     Xilinx Alveo U200 Vitis 2019.2
xilinx_u250_xdma     Xilinx Alveo U250 Vitis 2019.2
xilinx_u280-es1_xdma Xilinx Alveo U280 Vitis 2019.2
==================== ================= ================

DESIGN FILES
------------

Application code is located in the src directory. Accelerator binary
files will be compiled to the xclbin directory. The xclbin directory is
required by the Makefile and its contents will be filled during
compilation. A listing of all the files in this example is shown below

::

   src/host.cpp

COMMAND LINE ARGUMENTS
----------------------

Once the environment has been configured, the application can be
executed by

::

   ./device_query
